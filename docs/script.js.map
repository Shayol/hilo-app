{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/main.js","webpack:///./node_modules/intersection-observer/intersection-observer.js","webpack:///./src/img/favicon.ico","webpack:///./src/img/border_sol_pochat.png","webpack:///./src/img/border_camila_lamarca.png","webpack:///./src/img/border_carolina_zancolli.png","webpack:///./src/img/border_claudia_cortinez.png","webpack:///./src/img/border_florencia_walter.png","webpack:///./src/img/border_samuel_lasso.png","webpack:///./src/assets/Camila Lamarca.pdf","webpack:///./src/assets/Carolina Zancolli.pdf","webpack:///./src/assets/Claudia Cortinez.pdf","webpack:///./src/assets/Florencia Walter.pdf","webpack:///./src/assets/Samuel Lasso.pdf","webpack:///./src/assets/Sol Pochat.pdf"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","require","vh","document","documentElement","clientHeight","style","setProperty","concat","window","addEventListener","sliderLogo","querySelectorAll","container","querySelector","slider","sliderParent","arrowDown","arrowLeft","arrowRight","slides","cube","cubeFace","changeBorder","newSlide","el","computImg","getComputedStyle","backgroundImage","split","img","substring","length","forEach","borderImageSource","logo","e","stopPropagation","classList","toggle","arrow","index","TweenLite","to","scrollTo","current","currentNumber","parseInt","dataset","id","add","remove","intersectionObserver","IntersectionObserver","entries","observer","entry","intersectionRatio","target","threshold","element","observe","IntersectionObserverEntry","this","registry","THROTTLE_TIMEOUT","POLL_INTERVAL","USE_MUTATION_OBSERVER","_observationTargets","some","item","nodeType","Error","_registerInstance","push","_monitorIntersections","_checkForIntersections","unobserve","filter","_unmonitorIntersections","_unregisterInstance","disconnect","takeRecords","records","_queuedEntries","slice","_initThresholds","opt_threshold","Array","isArray","sort","a","isNaN","_parseRootMargin","opt_rootMargin","margins","map","margin","parts","exec","parseFloat","unit","_monitoringIntersections","_monitoringInterval","setInterval","addEvent","_domObserver","MutationObserver","attributes","childList","characterData","subtree","clearInterval","removeEvent","rootIsInDom","_rootIsInDom","rootRect","_getRootRect","top","bottom","left","right","width","height","targetRect","getBoundingClientRect","rootContainsTarget","_rootContainsTarget","oldEntry","intersectionRect","_computeTargetAndRootIntersection","newEntry","time","performance","now","boundingClientRect","rootBounds","_hasCrossedThreshold","isIntersecting","_callback","display","rect1","rect2","parent","getParentNode","atRoot","parentRect","parentComputedStyle","root","body","overflow","Math","max","min","html","clientWidth","_expandRectByRootMargin","rect","_rootMarginValues","newRect","oldRatio","newRatio","thresholds","containsDeep","indexOf","splice","targetArea","intersectionArea","Number","toFixed","callback","opt_options","fn","timeout","timer","options","setTimeout","rootMargin","join","node","event","opt_useCapture","attachEvent","removeEventListener","detatchEvent","err","child","parentNode","host"],"mappings":"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","file":"script.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import \"../scss/main.scss\";\r\nrequire('intersection-observer');\r\nimport '../img/favicon.ico';\r\nimport '../img/border_sol_pochat.png';\r\nimport '../img/border_camila_lamarca.png';\r\nimport '../img/border_carolina_zancolli.png';\r\nimport '../img/border_claudia_cortinez.png';\r\nimport '../img/border_florencia_walter.png';\r\nimport '../img/border_samuel_lasso.png';\r\n\r\nimport '../assets/Camila Lamarca.pdf';\r\nimport '../assets/Carolina Zancolli.pdf';\r\nimport '../assets/Claudia Cortinez.pdf';\r\nimport '../assets/Florencia Walter.pdf';\r\nimport '../assets/Samuel Lasso.pdf';\r\nimport '../assets/Sol Pochat.pdf';\r\n\r\nvar vh = document.documentElement.clientHeight * 0.01;\r\ndocument.documentElement.style.setProperty('--vh', `${vh}px`);\r\n\r\nwindow.addEventListener('resize', () => {\r\n    vh = document.documentElement.clientHeight * 0.01;\r\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\r\n})\r\n\r\nwindow.addEventListener('load', function () {\r\n    let sliderLogo = document.querySelectorAll(\".logo\");\r\n    let info = document.querySelector('.info');\r\n    let container = document.querySelector(\".container\");\r\n    let slider = document.querySelector(\".slider__content\");\r\n    let sliderParent = document.querySelector(\".slider\");\r\n    let arrowDown = document.querySelectorAll(\".arrow--down\");\r\n    let arrowLeft = document.querySelector(\".arrow--left\");\r\n    let arrowRight = document.querySelector(\".arrow--right\");\r\n    let slides = document.querySelectorAll(\".slide\");\r\n    let cube = document.querySelector('.d__cube');\r\n    let cubeFace = document.querySelectorAll(\".d__cube-face\");\r\n    let scene = document.querySelector(\".d__scene\");\r\n    let currentSlide = 1;\r\n\r\n    //show info\r\n\r\n    sliderLogo.forEach(logo => {\r\n        logo.addEventListener('click', (e) => {\r\n            e.stopPropagation();\r\n            container.classList.toggle(\"show-info\");\r\n        });\r\n    });\r\n\r\n    //navigate slider\r\n    arrowDown.forEach((arrow, index) => {\r\n        arrow.addEventListener('click', e => {\r\n            if (index < slides.length - 1) {\r\n\r\n                if (TweenLite) {\r\n\r\n                    TweenLite.to(slider, .5, { scrollTo: \"#slide\" + (index + 2) });\r\n                }\r\n            }\r\n            // if (TweenLite) {\r\n            //     if (parseInt(currentSlide) >= slides.length) {\r\n            //         return;\r\n            //     }\r\n            //     TweenLite.to(slider, .5, { scrollTo: \"#slide\" + (parseInt(currentSlide) + 1) });\r\n            // }\r\n        });\r\n    })\r\n\r\n    arrowLeft.addEventListener('click', e => {\r\n        let current = document.querySelector(\".show-slide\");\r\n        let currentNumber = parseInt(current.dataset.id) - 1;\r\n        if (current) {\r\n            e.stopPropagation();\r\n            let newSlide = slides[currentNumber > 0 ? currentNumber - 1 : slides.length - 1];\r\n            newSlide.classList.add(\"show-slide\");\r\n            current.classList.remove(\"show-slide\");\r\n\r\n            changeBorder(newSlide);\r\n        }\r\n    });\r\n\r\n    arrowRight.addEventListener('click', e => {\r\n        let current = document.querySelector(\".show-slide\");\r\n        let currentNumber = parseInt(current.dataset.id) - 1;\r\n        if (current) {\r\n            e.stopPropagation();\r\n            let newSlide = slides[currentNumber < slides.length - 1 ? currentNumber + 1 : 0];\r\n            newSlide.classList.add(\"show-slide\");\r\n            current.classList.remove(\"show-slide\");\r\n\r\n            changeBorder(newSlide);\r\n        }\r\n    });\r\n\r\n\r\n    function changeBorder(newSlide) {\r\n        //change border image for cube\r\n        let el = newSlide.querySelector(\".slide__img-wrapper\");\r\n        let computImg = getComputedStyle(el).backgroundImage.split(\"img/\")[1]\r\n        let img = computImg.substring(0, computImg.length - 2);\r\n        cubeFace.forEach(c => c.style.borderImageSource = `url(../img/border_${img})`);\r\n    }\r\n\r\n    const intersectionObserver = new IntersectionObserver((entries, observer) => {\r\n        entries.forEach((entry) => {\r\n            if (entry.intersectionRatio > 0.3) {\r\n                currentSlide = entry.target.dataset.id;\r\n            }\r\n\r\n        });\r\n    }, { threshold: 0.6 });\r\n\r\n    slides.forEach((element) => intersectionObserver.observe(element));\r\n\r\n    //zoom in \r\n\r\n    sliderParent.addEventListener('click', function () {\r\n        sliderParent.classList.toggle(\"slider--small\");\r\n        cube.classList.toggle(\"d__cube--big\");\r\n    })\r\n\r\n});","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n\n(function(window, document) {\n'use strict';\n\n\n// Exits early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observing a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = entry.rootBounds;\n  this.boundingClientRect = entry.boundingClientRect;\n  this.intersectionRect = entry.intersectionRect || getEmptyRect();\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    // Round the intersection ratio to avoid floating point math issues:\n    // https://github.com/w3c/IntersectionObserver/issues/324\n    this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (options.root && options.root.nodeType != 1) {\n    throw new Error('root must be an Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections();\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n\n    return item.element != target;\n  });\n  if (!this._observationTargets.length) {\n    this._unmonitorIntersections();\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibility state is visible.\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function() {\n  if (!this._monitoringIntersections) {\n    this._monitoringIntersections = true;\n\n    // If a poll interval is set, use polling instead of listening to\n    // resize and scroll events or DOM mutations.\n    if (this.POLL_INTERVAL) {\n      this._monitoringInterval = setInterval(\n          this._checkForIntersections, this.POLL_INTERVAL);\n    }\n    else {\n      addEvent(window, 'resize', this._checkForIntersections, true);\n      addEvent(document, 'scroll', this._checkForIntersections, true);\n\n      if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in window) {\n        this._domObserver = new MutationObserver(this._checkForIntersections);\n        this._domObserver.observe(document, {\n          attributes: true,\n          childList: true,\n          characterData: true,\n          subtree: true\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function() {\n  if (this._monitoringIntersections) {\n    this._monitoringIntersections = false;\n\n    clearInterval(this._monitoringInterval);\n    this._monitoringInterval = null;\n\n    removeEvent(window, 'resize', this._checkForIntersections, true);\n    removeEvent(document, 'scroll', this._checkForIntersections, true);\n\n    if (this._domObserver) {\n      this._domObserver.disconnect();\n      this._domObserver = null;\n    }\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, rootRect);\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: rootRect,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, rootRect) {\n\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var targetRect = getBoundingClientRect(target);\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return;\n\n    if (parent == this.root || parent == document) {\n      atRoot = true;\n      parentRect = rootRect;\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      if (parent != document.body &&\n          parent != document.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n\n      if (!intersectionRect) break;\n    }\n    parent = getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {Object} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var html = document.documentElement;\n    var body = document.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {Object} rect The rect object to expand.\n * @return {Object} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  return containsDeep(this.root || document, target);\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its execution, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detatchEvent == 'function') {\n    node.detatchEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object} The intersection rect or undefined if no intersection\n *     is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {Object} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {Object} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n/**\n * Checks to see if a parent element contains a child element (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n  return parent;\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}(window, document));\n","module.exports = __webpack_public_path__ + \"favicon.ico\";","module.exports = __webpack_public_path__ + \"img/border_sol_pochat.png\";","module.exports = __webpack_public_path__ + \"img/border_camila_lamarca.png\";","module.exports = __webpack_public_path__ + \"img/border_carolina_zancolli.png\";","module.exports = __webpack_public_path__ + \"img/border_claudia_cortinez.png\";","module.exports = __webpack_public_path__ + \"img/border_florencia_walter.png\";","module.exports = __webpack_public_path__ + \"img/border_samuel_lasso.png\";","module.exports = __webpack_public_path__ + \"assets/Camila Lamarca.pdf\";","module.exports = __webpack_public_path__ + \"assets/Carolina Zancolli.pdf\";","module.exports = __webpack_public_path__ + \"assets/Claudia Cortinez.pdf\";","module.exports = __webpack_public_path__ + \"assets/Florencia Walter.pdf\";","module.exports = __webpack_public_path__ + \"assets/Samuel Lasso.pdf\";","module.exports = __webpack_public_path__ + \"assets/Sol Pochat.pdf\";"],"sourceRoot":""}